type Metadata = record {
  fee : nat;
  decimals : nat8;
  owner : principal;
  logo : text;
  name : text;
  totalSupply : nat;
  symbol : text;
};
type Result = variant { Ok : nat; Err : TxError };
type TokenInfo = record {
  holderNumber : nat64;
  deployTime : nat64;
  metadata : Metadata;
  historySize : nat64;
  cycles : nat64;
  feeTo : principal;
};
type TxError = variant {
  InsufficientAllowance;
  InsufficientBalance;
  ErrorOperationStyle;
  Unauthorized;
  LedgerTrap;
  ErrorTo;
  Other;
  BlockUsed;
  AmountTooSmall;
};
service : (
  text,
  text,
  text,
  nat8,
  nat,
  principal,
  nat,
  principal,
  principal,
) -> {
  approve : (principal, nat) -> (Result);
  mint : (opt vec nat8, nat64) -> (Result);
  transfer : (principal, nat) -> (Result);
  transferFrom : (principal, principal, nat) -> (Result);
  withdraw : (nat64, text) -> (Result);
}

